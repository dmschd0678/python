프로그래밍 -> 사람이 사용하는 소프트웨어를 완성
문제 -> 해결 -> 지식
보잘것없는 것, 하찮은 것 -> 만들어보기

데이터 분석 -> 로그 분석, 로그 저장 시스템 -> 엑셀파일, json, txt, csv

공부할 자료는 방대하고 넘침 -> 일단 시작

필요한 부분만 흡수 -> 전체적인 그림 상세화 -> 마무리

스스로 혼자 코딩 -> 페어 코딩 -> 협업

TDD, 리펙토링, OOP 연습 -> 모든 프로그래밍의 핵심

코드를 작성하는 시간 < 코드를 읽는 시간

이해하기 쉽고 각 프로그래밍 언어 특징 원칙에 맞게 구현

피드백 받기, 코드 리뷰 -> Github

* 결국 내가 만든 건 다른 사람이 사용한다.

* 플랫폼 이해(aws, 애저, GCP)

전문성을 유지 -> (트렌디한 기술 발전에 대한 관심)
다양한 오픈소스 뭐가 추가되고 변경되는 지 최신정보 유지 노력

** 테스트 디버깅, 레퍼런스 문서(영어) -> 문제 해결 능력

에러 수정 능력 -> 점진적 코드 리뷰
주석 다이어그램 작성

다양한 컨텐츠를 개발 -> 여러 사람, 사이드 프로젝트, 해커톤 참가
오픈소스 참가